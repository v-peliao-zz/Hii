items:
- uid: msipc.ipc_credential
  id: IPC_CREDENTIAL
  parent: msipc.msipc_structures
  children:
  - msipc.ipc_credential.dwType
  - msipc.ipc_credential.pcCertContext
  - msipc.ipc_credential.pcSymmetricKey
  href: IPC_CREDENTIAL.yml
  langs:
  - cplusplus
  name: IPC_CREDENTIAL
  fullName: msipc.ipc_credential
  type: Struct
  assemblies: &o0
  - RMS21
  namespace: Structures
  summary: >+
    Credential structure used to authenticate to a server running AD RMS.







  remarks: "The union in this structure has been updated to work with compilers that do not support nameless unions. If your compiler does not support nameless unions, define the NONAMELESSUNION token before including the Msipc.h header file.\r\n\r\nThe value of the **dwType** member governs the interpretation of the union. The following table shows the possible values for **dwType**.\r\n\r\n<table border=\"1\">\n<tr>\n<th>dwType</th>\n<th>Value</th>\n<th>Remarks</th>\n</tr>\n<tr>\n<td>\n**IPC_CREDENTIAL_TYPE_X509**\n</td>\n<td>\n**PCCERT_CONTEXT**\n</td>\n<td>\nUse one of the Cryptographic APIs defined in WinCrypt.h                                                 to create **PCCERT_CONTEXT** (for example, @security.certfindcertificateinstore or @security.certcreatecertificatecontext).\r\n\r\nThe **PCCERT_CONTEXT** value should be valid until the  call is returned.                                                \r\n\r\nThis credential will be used while connecting to an AD RMS server to authenticate. If the specified credential fails                                                to authenticate **HRESULT_FROM_WIN32**(**ERROR_NOT_AUTHENTICATED**)                                                will be returned. This credential will be used silently (that is, no credentials UI will be displayed).\r\n\r\n\n</td>\n</tr>\n<tr>\n<td>\n**IPC_CREDENTIAL_TYPE_SYMMETRIC_KEY**\n</td>\n<td>\n**PCIPC_CREDENTIAL_SYMMETRIC_KEY**\n</td>\n<td>\nThe Symmetric key, Service Principal Name and BPOS Id can be acquired                                                                        by registering the Service Principal in ACS. For more information, see @msipc.how_to_use_file_api_with_aadrm__cloud_\r\n\r\n\n</td>\n</tr>\n</table>\r\n\r\n"
  syntax:
    content: >-
      typedef struct _IPC_CREDENTIAL {
      	DWORD dwType;
      	union {
      		PCCERT_CONTEXT pcCertContext;
      		PCIPC_CREDENTIAL_SYMMETRIC_KEY pcSymmetricKey;
      	};
      } IPC_CREDENTIAL *PIPC_CREDENTIAL;
  inheritance: []
- uid: msipc.ipc_credential.dwType
  id: dwType
  parent: msipc.ipc_credential
  href: IPC_CREDENTIAL.yml
  langs:
  - cplusplus
  name: dwType
  fullName: msipc.ipc_credential.dwType
  type: Field
  assemblies: *o0
  namespace: Structures
  summary: >-
    Contains the type code for the credential, which governs how the credential is interpreted. For more information, see Remarks.



    <table border="1">

    <tr>

    <th>Name</th>

    <th>Value</th>

    <th>Meaning</th>

    </tr>

    <tr>

    <td>

    **IPC_CREDENTIAL_TYPE_X509**

    </td>

    <td>

    **1**

    </td>

    <td>

    X509 Credential - only allowed when the API Mode is set to **IPC_API_MODE_SERVER**. For more information, see @msipc.api_mode_values.

    </td>

    </tr>

    <tr>

    <td>

    **IPC_CREDENTIAL_TYPE_SYMMETRIC_KEY**

    </td>

    <td>

    **2**

    </td>

    <td>

    Symmetric Key - only allowed when the API Mode is set to **IPC_API_MODE_SERVER**. For more information, see @msipc.api_mode_values.

    </td>

    </tr>

    </table>
- uid: msipc.ipc_credential.pcCertContext
  id: pcCertContext
  parent: msipc.ipc_credential
  href: IPC_CREDENTIAL.yml
  langs:
  - cplusplus
  name: pcCertContext
  fullName: msipc.ipc_credential.pcCertContext
  type: Field
  assemblies: *o0
  namespace: Structures
  summary: Credential governed by **dwType**.
- uid: msipc.ipc_credential.pcSymmetricKey
  id: pcSymmetricKey
  parent: msipc.ipc_credential
  href: IPC_CREDENTIAL.yml
  langs:
  - cplusplus
  name: pcSymmetricKey
  fullName: msipc.ipc_credential.pcSymmetricKey
  type: Field
  assemblies: *o0
  namespace: Structures
  summary: Symmetric key credential represented by an @msipc.ipc_credential_symmetric_key structure.
references:
- uid: msipc.api_mode_values
  href: API mode values.yml
  name: API mode values
- uid: msipc.ipc_credential_symmetric_key
  href: IPC_CREDENTIAL_SYMMETRIC_KEY.yml
  name: IPC_CREDENTIAL_SYMMETRIC_KEY
- uid: security.certfindcertificateinstore
  name: CertFindCertificateInStore
- uid: security.certcreatecertificatecontext
  name: CertCreateCertificateContext
- uid: msipc.how_to_use_file_api_with_aadrm__cloud_
  name: >
    Enable your service application to work with cloud based RMS
- uid: msipc.ipc_credential.dwType
  href: IPC_CREDENTIAL.yml
  name: dwType
- uid: msipc.ipc_credential.pcCertContext
  href: IPC_CREDENTIAL.yml
  name: pcCertContext
- uid: msipc.ipc_credential.pcSymmetricKey
  href: IPC_CREDENTIAL.yml
  name: pcSymmetricKey
